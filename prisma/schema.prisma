generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique
  user User[]
}

model User {
  id         Int                   @id @default(autoincrement())
  name       String
  email      String                @unique
  password   String
  created_at DateTime              @default(now())
  updated_at DateTime              @default(now())
  role_id    Int
  role       Role                  @relation(fields: [role_id], references: [id])
  tokens     PersonalAccessToken[]
  customer   Customer?
}

model PersonalAccessToken {
  id         Int      @id @default(autoincrement())
  token      String
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
}

model Book {
  id          Int         @id @default(autoincrement())
  title       String
  writer      String
  cover_image String
  price       Float
  tags        String[]
  orderItems  OrderItem[]
}

model Customer {
  id         Int      @id @default(autoincrement())
  points     Int      @default(100)
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  user_id    Int      @unique
  user       User     @relation(fields: [user_id], references: [id])
  orders     Order[]
}

model Order {
  id          Int         @id @default(autoincrement())
  total       Float
  customer_id Int
  customer    Customer    @relation(fields: [customer_id], references: [id])
  created_at  DateTime    @default(now())
  updated_at  DateTime    @default(now())
  items       OrderItem[]
}

model OrderItem {
  id       Int   @id @default(autoincrement())
  price    Float
  quantity Int
  order_id Int
  order    Order @relation(fields: [order_id], references: [id])
  book_id  Int
  book     Book  @relation(fields: [book_id], references: [id])
}
